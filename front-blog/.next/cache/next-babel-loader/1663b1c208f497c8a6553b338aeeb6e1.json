{"ast":null,"code":"var _jsxFileName = \"/Users/wenhaoming/Desktop/practise/react_blog/front-blog/components/tocify.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Anchor } from 'antd';\nimport { last } from 'lodash';\nconst {\n  Link\n} = Anchor;\n// TOC目录树结\nexport default class Tocify {\n  constructor() {\n    _defineProperty(this, \"tocItems\", []);\n\n    _defineProperty(this, \"index\", 0);\n\n    _defineProperty(this, \"reset\", () => {\n      this.tocItems = [];\n      this.index = 0;\n    });\n\n    this.tocItems = [];\n    this.index = 0;\n  }\n\n  add(text, level) {\n    const anchor = `toc${level}${++this.index}`;\n    const item = {\n      anchor,\n      level,\n      text\n    };\n    const items = this.tocItems;\n\n    if (items.length === 0) {\n      // 第一个 item 直接 push\n      items.push(item);\n    } else {\n      let lastItem = last(items); // 最后一个 item\n\n      if (item.level > lastItem.level) {\n        // item 是 lastItem 的 children\n        for (let i = lastItem.level + 1; i <= 2; i++) {\n          const {\n            children\n          } = lastItem;\n\n          if (!children) {\n            // 如果 children 不存在\n            lastItem.children = [item];\n            break;\n          }\n\n          lastItem = last(children); // 重置 lastItem 为 children 的最后一个 item\n\n          if (item.level <= lastItem.level) {\n            // item level 小于或等于 lastItem level 都视为与 children 同级\n            children.push(item);\n            break;\n          }\n        }\n      } else {\n        // 置于最顶级\n        items.push(item);\n      }\n    }\n\n    return anchor;\n  }\n\n  renderToc(items) {\n    // 递归 render\n    return items.map(item => __jsx(Link, {\n      key: item.anchor,\n      href: `#${item.anchor}`,\n      title: item.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, item.children && this.renderToc(item.children)));\n  }\n\n  render() {\n    return __jsx(Anchor, {\n      affix: true,\n      showInkInFixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, this.renderToc(this.tocItems));\n  }\n\n}","map":{"version":3,"sources":["/Users/wenhaoming/Desktop/practise/react_blog/front-blog/components/tocify.tsx"],"names":["React","Anchor","last","Link","Tocify","constructor","tocItems","index","add","text","level","anchor","item","items","length","push","lastItem","i","children","renderToc","map","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWF,MAAjB;AASkC;AAElC,eAAe,MAAMG,MAAN,CAAa;AAK1BC,EAAAA,WAAW,GAAG;AAAA,sCAJO,EAIP;;AAAA,mCAFE,CAEF;;AAAA,mCAsCN,MAAM;AACZ,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,KAAL,GAAa,CAAb;AACD,KAzCa;;AACZ,SAAKD,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,CAAb;AACD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAeC,KAAf,EAA8B;AAC/B,UAAMC,MAAM,GAAI,MAAKD,KAAM,GAAE,EAAE,KAAKH,KAAM,EAA1C;AACA,UAAMK,IAAI,GAAG;AAAED,MAAAA,MAAF;AAAUD,MAAAA,KAAV;AAAiBD,MAAAA;AAAjB,KAAb;AACA,UAAMI,KAAK,GAAG,KAAKP,QAAnB;;AAEA,QAAIO,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AAAE;AACxBD,MAAAA,KAAK,CAACE,IAAN,CAAWH,IAAX;AACD,KAFD,MAEO;AACL,UAAII,QAAQ,GAAGd,IAAI,CAACW,KAAD,CAAnB,CADK,CACkC;;AAEvC,UAAID,IAAI,CAACF,KAAL,GAAaM,QAAQ,CAACN,KAA1B,EAAiC;AAAE;AACjC,aAAK,IAAIO,CAAC,GAAGD,QAAQ,CAACN,KAAT,GAAiB,CAA9B,EAAiCO,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC5C,gBAAM;AAAEC,YAAAA;AAAF,cAAeF,QAArB;;AACA,cAAI,CAACE,QAAL,EAAe;AAAE;AACfF,YAAAA,QAAQ,CAACE,QAAT,GAAoB,CAACN,IAAD,CAApB;AACA;AACD;;AAEDI,UAAAA,QAAQ,GAAGd,IAAI,CAACgB,QAAD,CAAf,CAP4C,CAON;;AAEtC,cAAIN,IAAI,CAACF,KAAL,IAAcM,QAAQ,CAACN,KAA3B,EAAkC;AAAE;AAClCQ,YAAAA,QAAQ,CAACH,IAAT,CAAcH,IAAd;AACA;AACD;AACF;AACF,OAfD,MAeO;AAAE;AACPC,QAAAA,KAAK,CAACE,IAAN,CAAWH,IAAX;AACD;AACF;;AAED,WAAOD,MAAP;AACD;;AAODQ,EAAAA,SAAS,CAACN,KAAD,EAAmB;AAAE;AAC5B,WAAOA,KAAK,CAACO,GAAN,CAAUR,IAAI,IACnB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACD,MAAhB;AAAwB,MAAA,IAAI,EAAG,IAAGC,IAAI,CAACD,MAAO,EAA9C;AAAiD,MAAA,KAAK,EAAEC,IAAI,CAACH,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,IAAI,CAACM,QAAL,IAAiB,KAAKC,SAAL,CAAeP,IAAI,CAACM,QAApB,CADpB,CADK,CAAP;AAKD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,cAAc,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKF,SAAL,CAAe,KAAKb,QAApB,CADJ,CADF;AAKD;;AA9DyB","sourcesContent":["import React from 'react';\nimport { Anchor } from 'antd';\nimport { last } from 'lodash';\n\nconst { Link } = Anchor;\n\nexport interface TocItem {\n  anchor: string;\n  level: number;\n  text: string;\n  children?: TocItem[];\n}\n\nexport type TocItems = TocItem[]; // TOC目录树结\n\nexport default class Tocify {\n  tocItems: TocItems = [];\n\n  index: number = 0;\n\n  constructor() {\n    this.tocItems = [];\n    this.index = 0;\n  }\n\n  add(text: string, level: number) {\n    const anchor = `toc${level}${++this.index}`;\n    const item = { anchor, level, text };\n    const items = this.tocItems;\n\n    if (items.length === 0) { // 第一个 item 直接 push\n      items.push(item);\n    } else {\n      let lastItem = last(items) as TocItem; // 最后一个 item\n\n      if (item.level > lastItem.level) { // item 是 lastItem 的 children\n        for (let i = lastItem.level + 1; i <= 2; i++) {\n          const { children } = lastItem;\n          if (!children) { // 如果 children 不存在\n            lastItem.children = [item];\n            break;\n          }\n\n          lastItem = last(children) as TocItem; // 重置 lastItem 为 children 的最后一个 item\n\n          if (item.level <= lastItem.level) { // item level 小于或等于 lastItem level 都视为与 children 同级\n            children.push(item);\n            break;\n          }\n        }\n      } else { // 置于最顶级\n        items.push(item);\n      }\n    }\n\n    return anchor;\n  }\n\n  reset = () => {\n    this.tocItems = [];\n    this.index = 0;\n  };\n\n  renderToc(items: TocItem[]) { // 递归 render\n    return items.map(item => (\n      <Link key={item.anchor} href={`#${item.anchor}`} title={item.text}>\n        {item.children && this.renderToc(item.children)}\n      </Link>\n    ));\n  }\n\n  render() {\n    return (\n      <Anchor affix showInkInFixed>\n         {this.renderToc(this.tocItems)}\n      </Anchor>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}