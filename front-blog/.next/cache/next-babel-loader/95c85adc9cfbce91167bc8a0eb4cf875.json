{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport \"../../static/style/global/comm.less\";\nimport \"../../static/style/pages/Home.less\";\nimport \"../../static/style/components/md.less\";\nimport Head from \"next/head\";\nimport { Row, Col, List, Breadcrumb } from \"antd\";\nimport { CalendarOutlined, FolderOutlined, FireOutlined } from \"@ant-design/icons\";\nimport { getArticleList } from \"../../api/index\";\nimport { useRouter } from 'next/router';\nimport marked from 'marked';\nimport hljs from \"highlight.js\";\nimport 'highlight.js/styles/monokai-sublime.css';\nimport Header from \"../../components/Header.js\";\nimport Author from \"../../components/Author.js\";\nimport Footer from \"../../components/Footer.js\";\n\nfunction ContentList(_ref) {\n  var _marked$setOptions;\n\n  var listContent = _ref.listContent;\n\n  var _useState = useState(listContent),\n      mylist = _useState[0],\n      setMylist = _useState[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    setMylist(listContent);\n  }, [listContent]);\n  var renderer = new marked.Renderer();\n  marked.setOptions((_marked$setOptions = {\n    renderer: renderer,\n    gfm: true,\n    pedantic: false,\n    sanitize: false,\n    tables: true,\n    breaks: false,\n    smartLists: true,\n    smartypants: false\n  }, _defineProperty(_marked$setOptions, \"sanitize\", false), _defineProperty(_marked$setOptions, \"xhtml\", false), _defineProperty(_marked$setOptions, \"highlight\", function highlight(code) {\n    return hljs.highlightAuto(code).value;\n  }), _marked$setOptions));\n\n  var header = __jsx(\"div\", null, __jsx(Breadcrumb, null, __jsx(Breadcrumb.Item, {\n    onClick: function onClick() {\n      return router.push('/');\n    }\n  }, __jsx(\"a\", null, \"\\u9996\\u9875\")), __jsx(Breadcrumb.Item, null, \"\\u89C6\\u9891\\u5217\\u8868\")), __jsx(\"span\", null, \"\\u6700\\u65B0\\u65E5\\u5FD7\"));\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Home\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1, maximum-scale=1\"\n  })), __jsx(Header, null), __jsx(Row, {\n    className: \"home-main\",\n    type: \"flex\",\n    justify: \"center\"\n  }, __jsx(Col, {\n    className: \"home-main-left\",\n    xs: 23,\n    sm: 23,\n    md: 16,\n    lg: 16,\n    xl: 16\n  }, __jsx(List, {\n    dataSource: mylist,\n    itemLayout: \"vertical\",\n    header: header,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, null, __jsx(\"a\", {\n        className: \"list-title\"\n      }, item.title), __jsx(\"div\", {\n        className: \"list-sub-title\"\n      }, __jsx(\"div\", {\n        className: \"sub-item\"\n      }, __jsx(CalendarOutlined, null), __jsx(\"span\", {\n        className: \"sub-txt\"\n      }, item.addTime)), __jsx(\"div\", {\n        className: \"sub-item\"\n      }, __jsx(FolderOutlined, null), __jsx(\"span\", {\n        className: \"sub-txt\"\n      }, item.typeName)), __jsx(\"div\", {\n        className: \"sub-item\"\n      }, __jsx(FireOutlined, null), __jsx(\"span\", {\n        className: \"sub-txt\"\n      }, item.view_count))), __jsx(\"div\", {\n        className: \"list-context\",\n        dangerouslySetInnerHTML: {\n          __html: marked(item.introduce)\n        }\n      }));\n    }\n  })), __jsx(Col, {\n    className: \"home-main-right\",\n    xs: 0,\n    sm: 0,\n    md: 5,\n    lg: 5,\n    xl: 5\n  }, __jsx(Author, null))), __jsx(Footer, null));\n}\n\nContentList.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var id, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return getArticleList(id);\n\n          case 3:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              listContent: res.data.data || []\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default ContentList;","map":null,"metadata":{},"sourceType":"module"}